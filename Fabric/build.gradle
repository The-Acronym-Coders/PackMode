plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom'
    id 'net.darkhax.curseforgegradle' version '1.0.11'
}
base {
    archivesName = "${mod_name}-fabric-${minecraft_version}"
}

repositories {
    maven {
        url = "https://api.modrinth.com/maven"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":common")

    modImplementation "com.blamejared.crafttweaker:CraftTweaker-fabric-${minecraft_version}:${crafttweaker_version}"
    modImplementation "maven.modrinth:midnightlib:${midnight_lib_version}"
    include "maven.modrinth:midnightlib:${midnight_lib_version}"
    modRuntimeOnly("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")
}

loom {
    if (project(":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("runServer")
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}
tasks.withType(Javadoc).configureEach {
    source(project(":common").sourceSets.main.allJava)
}
tasks.named("sourcesJar", Jar) {
    from(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources
    filesMatching('fabric.mod.json', {
        expand project.properties.clone()
    })
}

task publishToCurseForge(type:  net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    apiToken = project.findProperty("curseforge.upload.api.token") ?: "invalid/no CurseForge API token found!"

    def mainFile = upload(curseforge_project_id, file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))

    mainFile.displayName = "${archivesBaseName}-${version}"
    mainFile.releaseType = curseforge_release_type_fabric
    mainFile.addModLoader(curseforge_mod_loader_fabric)
    mainFile.addGameVersion("1.20.1")
    mainFile.addJavaVersion(curseforge_java_version)

    mainFile.addRequirement('fabric-api') //Fabric API slug
    mainFile.addEmbedded('midnightlib') //Cloth Config slug
    mainFile.addOptional('crafttweaker')
    mainFile.changelog = curseforge_fabric_changelog //Don't forget to double check the changelog.
}

tasks.publishToCurseForge.dependsOn(tasks.build)

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
